name: trihelix-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g. v1.2.4)"
        required: true
  pull_request:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y python3

      - name: Generate release notes & changelog (safe)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p docs

          # Curated notes stub (prevent 'cat: not found')
          if [[ ! -f docs/RELEASE_NOTES.md ]]; then
            echo "Initial notes. Will be curated in future releases." > docs/RELEASE_NOTES.md
          fi

          # Try to build CHANGELOG if script exists
          if [[ -f scripts/changelog.py ]]; then
            python3 scripts/changelog.py || true
          fi

          # Figure out version and compare range robustly
          EVENT="${GITHUB_EVENT_NAME}"
          VER_INPUT="${{ github.event.inputs.version || '' }}"
          if [[ "$EVENT" == "workflow_dispatch" && -n "$VER_INPUT" ]]; then
            VER="$VER_INPUT"
          else
            VER="$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null || echo 'v0.0.0-PR')"
          fi
          LAST_TAG="$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null || echo 'v0.0.0')"
          REPO="${GITHUB_REPOSITORY}"

          # Build body (never fail on missing files)
          {
            echo "# TriHelix ${VER}"
            echo
            echo "## Summary"
            cat docs/RELEASE_NOTES.md 2>/dev/null || echo "TBD"
            echo
            echo "## Changelog"
            cat docs/CHANGELOG.md 2>/dev/null || echo "*No CHANGELOG yet*"
            echo
            echo "## Links"
            echo "- Compare: https://github.com/${REPO}/compare/${LAST_TAG}...${VER}"
            echo "- Repo: https://github.com/${REPO}"
          } > docs/RELEASE_BODY.md

      - name: Create tag (dispatch only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        shell: bash
        run: |
            set -euo pipefail
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git tag -f "${{ inputs.version }}"
            git push -f origin "refs/tags/${{ inputs.version }}"

      - name: Create GitHub Release (dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name:  ${{ inputs.version }}
          body_path: docs/RELEASE_BODY.md
          make_latest: true
