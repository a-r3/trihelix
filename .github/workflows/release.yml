name: trihelix-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version tag (e.g. v1.2.4)"
        required: true
  pull_request:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y python3

      - name: Ensure docs stubs (never fail on missing files)
        run: |
          mkdir -p docs
          # RELEASE_NOTES.md: manual summary (optional). Create stub if absent.
          test -f docs/RELEASE_NOTES.md || echo "No manual notes for this release." > docs/RELEASE_NOTES.md
          # CHANGELOG.md: ensure exists (scripts/changelog.py will also (re)generate)
          test -f docs/CHANGELOG.md || echo "# Changelog\n\n" > docs/CHANGELOG.md

      - name: Generate release body (notes + changelog + links)
        shell: bash
        run: |
          set -euo pipefail
          ver="${{ github.event.inputs.version }}"
          repo="${GITHUB_REPOSITORY}"
          # safe base tag
          base_tag="$(git describe --tags --abbrev=0 --match 'v*' 2>/dev/null || echo v0.0.0)"
          compare_url="https://github.com/${repo}/compare/${base_tag}...${ver}"

          # optional helper scripts: ignore if missing
          chmod +x scripts/changelog.py 2>/dev/null || true
          python3 scripts/changelog.py 2>/dev/null || true

          {
            echo "# TriHelix ${ver}"
            echo
            echo "## Summary"
            # if RELEASE_NOTES.md is empty, still keep section
            cat docs/RELEASE_NOTES.md || true
            echo
            echo "## Changelog"
            cat docs/CHANGELOG.md || true
            echo
            echo "## Links"
            echo "- Compare: ${compare_url}"
            echo "- Repo: https://github.com/${repo}"
          } > docs/RELEASE_BODY.md

      - name: Run evaluation aggregator (if script exists)
        run: |
          if [ -x scripts/eval_aggregate.py ]; then
            ./scripts/eval_aggregate.py || python3 scripts/eval_aggregate.py || true
          elif [ -f scripts/eval_aggregate.py ]; then
            python3 scripts/eval_aggregate.py || true
          else
            echo "No eval_aggregate.py; skipping."
          fi

      - name: Upload eval summary artifact (if exists)
        uses: actions/upload-artifact@v4
        with:
          name: eval-summary
          path: |
            docs/EVAL_SUMMARY.md
            docs/EVAL_SUMMARY.json
          if-no-files-found: ignore

      - name: Create tag & GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: TriHelix ${{ github.event.inputs.version }}
          body_path: docs/RELEASE_BODY.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
