name: trihelix-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install deps
        run: sudo apt-get update && sudo apt-get install -y python3

      - name: Generate release notes
        run: |
          chmod +x scripts/release-notes.py || true
          python3 scripts/release-notes.py

      - name: Commit notes if changed
        run: |
          git config user.name "helix-bot"
          git config user.email "helix-bot@users.noreply.github.com"
          git add docs/RELEASE_NOTES.md CONTEXT.yaml || true
          git diff --cached --quiet || git commit -m "chore(release): update notes/context"

      # Only when dispatch: create tag here
      - name: Create tag (workflow_dispatch only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          ver="${{ github.event.inputs.version }}"
          git tag -a "$ver" -m "TriHelix $ver"
          git push origin "$ver"

      # Release for workflow_dispatch (use input version)
      - name: Create GitHub Release (dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: TriHelix ${{ github.event.inputs.version }}
          body_path: docs/RELEASE_BODY.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Release for tag push (use ref tag)
      - name: Create GitHub Release (tag push)
        if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: TriHelix ${{ github.ref_name }}
          body_path: docs/RELEASE_BODY.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build release body
        run: |
          python3 scripts/changelog.py
          ver="${{ github.event_name == 'workflow_dispatch' && github.event.inputs.version || github.ref_name }}"
          repo="${GITHUB_REPOSITORY}"
          compare_url="https://github.com/${repo}/compare/$(git describe --tags --abbrev=0 --tags --match 'v*' 2>/dev/null || echo v0.0.0)...${ver}"
          echo "# TriHelix ${ver}"            >  docs/RELEASE_BODY.md
          echo ""                            >> docs/RELEASE_BODY.md
          echo "## Summary"                  >> docs/RELEASE_BODY.md
          cat docs/RELEASE_NOTES.md         >> docs/RELEASE_BODY.md
          echo ""                            >> docs/RELEASE_BODY.md
          echo "## Changelog"                >> docs/RELEASE_BODY.md
          cat docs/CHANGELOG.md             >> docs/RELEASE_BODY.md
          echo ""                            >> docs/RELEASE_BODY.md
          echo "## Links"                    >> docs/RELEASE_BODY.md
          echo "- Compare: ${compare_url}"   >> docs/RELEASE_BODY.md
          echo "- Repo: https://github.com/${repo}" >> docs/RELEASE_BODY.md

      - name: Attach health & metrics (optional)
        run: |
          {
            echo ""; echo "## Health & Metrics";
            echo ""; echo '```json'
            jq -n --slurpfile h .helix/health.json --slurpfile m .helix/metrics.json '{health:$h[0],metrics:$m[0]}' || echo '{"health":null,"metrics":null}'
            echo '```'
          } >> docs/RELEASE_BODY.md
